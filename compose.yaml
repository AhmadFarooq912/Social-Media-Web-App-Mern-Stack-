services:
  server:
    build:
      context: ./Server
      dockerfile: ./Dockerfile
    restart: unless-stopped
    init: true
    # Uncomment the next line if you have a .env file in ./Server
    # env_file: ./Server/.env
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    networks:
      - appnet

  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    restart: unless-stopped
    init: true
    # Uncomment the next line if you have a .env file in ./client
    # env_file: ./client/.env
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - appnet

  mongo:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - appnet

volumes:
  mongo-data:

networks:
  appnet:
    driver: bridge
